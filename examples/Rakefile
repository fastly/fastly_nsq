require 'fastly_nsq/rake_task'

# A list of topics and a channel will need to be passed in to the Rake task
# when it is called.

desc 'Listen to the messaging queue with the given channel.'

FastlyNsq::RakeTask.new(:listen_task) do |task|
  task.channel = 'some_channel'
  task.topics  = { 'a_topic' => RespondsToProcess }
end

# A custom logger and preprocessor

desc 'Listen to the messaging queue with the given channel.'

FastlyNsq::RakeTask.new(:listen_task) do |task|
  task.channel      = 'some_channel'
  task.topics       = { 'a_topic' => RespondsToProcess }
  task.preprocessor = ->(message) { StatsClient.log(message) }
  task.logger       = Logger.new(STDERR)
end

#-------------------------------------------------------------------------------
# In Rails, you can include the application environment. The task looks like:

FastlyNsq::RakeTask.new(:listen_task => :environment)

#-------------------------------------------------------------------------------
# It's also possible to define the rake task to allow for overriding channel
# and topics when calling the rake task:

FastlyNsq::RakeTask.new(:listen_task, [:channel, :topics])

# Then call the task:
#   rake listen_task[my_channel, {topic: Processor}]

#-------------------------------------------------------------------------------
# Do the same thing and include the environment:

FastlyNsq::RakeTask.new(:listen_task, [:channel, :topics] => :environment)
